{"mergeCondition":null,"minFlagCol":null,"format":"catalogTable","catalog":"spark_catalog","path":"sst_ingest_ndev","insertInto":null,"provider":"delta","externalFilePath":"","mergeTargetAlias":"target","overwriteSchema":null,"flagValue":"integer","versionAsOf":null,"writeMode":"error","description":"Test dataset capturing records with associated timestamps, useful for validating data processing and integration workflows.","replaceWhere":null,"historicColumns":[],"mergeSourceAlias":"source","filterQuery":"","notMatchedTable":[],"fromTimeCol":null,"notMatchedCondition":null,"matchedTable":[],"notMatchedAction":"insert","partitionColumns":null,"schema":{"type":"struct","fields":[{"name":"col1","type":"string","nullable":true,"metadata":{"description":"Unique identifier for each record in the dataset","mappings":[],"tags":[]}},{"name":"col2","type":"string","nullable":true,"metadata":{"description":"Second value in the dataset; Represents a numerical string value.","mappings":[],"tags":[]}},{"name":"col3","type":"string","nullable":true,"metadata":{"description":"Description or label for the record","mappings":[],"tags":[]}},{"name":"load_timestamp","type":"timestamp","nullable":true,"metadata":{"description":"Timestamp indicating when the record was loaded into the dataset; Format is ISO 8601 (YYYY-MM-DDTHH:MM:SS.sssZ).","mappings":[],"tags":[]}}]},"activeTab":"whenMatched","tableName":"test_input_observability","maxFlagCol":null,"matchedConditionDelete":null,"isCatalogEnabled":null,"additionalProperties":{"copilot":{"datasetDescriptionStatus":"fromCopilotWithInterim"}},"componentInfo":{"gemId":"gitUri=http://gitserver:3000/5qX7Px4b_team_37/5qX7Px4b_project_51.git&subPath=&tag=0.2.28&projectSubscriptionProjectId=51&path=gems/catalogTable","projectName":"ProphecySparkBasicsPython"},"matchedActionDelete":"ignore","timestampAsOf":null,"mergeSchema":null,"toTimeCol":null,"optimizeWrite":null,"useExternalFilePath":false,"keyColumns":[],"matchedCondition":null,"matchedAction":"update","datasetType":"Database","fileFormat":"parquet"}